@using SocialNetwork.Models.Users
@using Microsoft.AspNetCore.Identity
@using SocialNetwork.Models.Users.Status
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model SocialNetwork.Models.ViewModels.HomeViewModel

@{
    ViewData["Title"] = "Home Page";
}
   

<div id="home" class="container">
    <div class="row">
        <div class="col-sm timeline-container">
            <div class="row status-post">
                <!-- Form to post a status update -->
                @using (Html.BeginForm("StatusPost", "Status", FormMethod.Post))
                {
                    @Html.TextBoxFor(m => m.Post.Content, new { @placeholder = "Enter a status update.." })
                    <input type="submit" value="Post Update" />
                }
            </div>

            <div class="row">
                <div class="post-container">
                    @foreach (Post post in Model.TimelinePosts)
                    {
                    <div class="post-container__item">
                        <h3><span>posted by </span>@post.User.FirstName</h3>
                        @post.Content
                        <div class="post-container__item-overlay">
                            <div class="overlay-user-actions">
                                <div>
                                    <i class="fas fa-reply"></i>
                                </div>
                                <div>
                                    <i class='fas fa-heart @(!Model.User.PostLiked(Model.User.Id, post.StatusId) ? "post-unliked" : "post-liked")'
                                       v-on:click="likeStatus"></i>
                                    <input type="hidden" name="userId" value="@Model.User.Id" />
                                    <input type="hidden" name="postId" value="@post.StatusId" />
                                </div>
                            </div>

                            <div class="overlay-status-reply">
                                @using (Html.BeginForm("StatusPost", "Status", FormMethod.Post))
                                {
                                    @Html.TextBoxFor(m => m.Post.Content, new { @placeholder = "Enter a status update.." })
                                    <input type="submit" value="Post Update" />
                                }

                                <i class="fas fa-times"></i>
                            </div>
                        </div>
                        <br />
                        <span class="post-container__item-likes" style="@(post.Likes.Count == 0 ? "display:none;" : "") ">
                            @post.Likes.Count like@(post.Likes.Count > 1 ? "s" : "")
                        </span>
                    </div>
                    }
                    <!--
                    {
                        <div class="post-container__item" style="border: 1px solid black; margin: 15px; padding: 15px;">
                            <img style="width: 45px;float:left;margin-right: 10px;" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/111167/balapa.jpg">
                            <div class="post__content">
                                <span class="post__content-name"></span>
                                <span class="post__content-date"></span>
                                <div class="post__content-status"></div>
                                @using (Html.BeginForm("StatusDelete", "Status", FormMethod.Post))
                                {
                                    <input type="hidden" value="" name="statusId" />
                                    <input type="submit" value="Delete" />
                                }
                            </div>
                        </div>
                    }-->
                </div>
            </div>
        </div>
        <div class="col-sm" style="display:none;">
            <div class="row">
                <div class="friend-container">
                    @foreach (ApplicationUser user in Model.FriendSuggestions)
                    {
                        <div class="friend-container__item">
                            <img style="width: 100px;" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/111167/balapa.jpg" />
                            <span>@user.FirstName @user.LastName</span>
                            @if (!Model.User.IsFriend(Model.User.Id, user.Id))
                            {
                                @using (Html.BeginForm("AddFriend", "Friend", FormMethod.Post))
                                {
                                    @Html.Hidden("UserId", Model.User.Id);
                                    @Html.Hidden("FriendId", user.Id);

                                    <input type="submit" value="Add Friend" />
                                }
                            }
                            else
                            {
                                @using (Html.BeginForm("RemoveFriend", "Friend", FormMethod.Post))
                                {
                                    @Html.Hidden("UserId", Model.User.Id);
                                    @Html.Hidden("FriendId", user.Id);

                                    <input type="submit" value="Remove Friend" />
                                }
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        /*
        $(document).on('click', '.post-unliked', function () {
            var data = {
                userId : $(this).parent().find('input[name="userId"]').val(),
                postId : $(this).parent().find('input[name="postId"]').val()
            }
            var $this = $(this).parent().parent().parent();
            $.post("/Ajax/LikePost", { UserId: data.userId, PostId: data.postId }, function (data) {
                if (data.response == "Success") {
                    $this.find('.post-unliked').removeClass('post-unliked').addClass('post-liked');
                    postLikesHtml($this, data);
                }
            });
        });

        $(document).on('click', '.post-liked', function () {
            var data = {
                userId: $(this).parent().find('input[name="userId"]').val(),
                postId: $(this).parent().find('input[name="postId"]').val()
            }
            var $this = $(this).parent().parent().parent();

            $.post("/Ajax/UnlikePost", { UserId: data.userId, PostId: data.postId }, function (data) {
                if (data.response == "Success") {
                    $this.find('.post-liked').removeClass('post-liked').addClass('post-unliked');
                    postLikesHtml($this, data);
                }
            });
        });

        function postLikesHtml($element, data) {
            if (data.likesHtml !== "0") {
                $element.find('.post-container__item-likes').text(data.likesHtml).show();
            } else {
                $element.find('.post-container__item-likes').hide();
            }
        }

        $('.fa-reply').on('click', function () {
            $(this).parent().parent().hide().parent().find('.overlay-status-reply').show('slow');
        });

        $('.fa-times').on('click', function () {
            $(this).parent().hide().parent().find('.overlay-user-actions').show('slow');
        }); */
    </script>
}
@using SocialNetwork.Models.Users.Status
@using SocialNetwork.Models.Users
@using SocialNetwork.Classes
@model SocialNetwork.Models.ViewModels.HomeViewModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <div class="row">
        <div class="col-sm">
            <div class="row">
                <!-- Form to post a status update -->
                @using (Html.BeginForm("StatusPost", "Status", FormMethod.Post))
                {
                    @Html.LabelFor(m => m.Post.Content)
                    @Html.TextBoxFor(m => m.Post.Content)
                    <input type="submit" value="Post Update" />
                }
            </div>

            <div class="row">
                <div class="post-container" style="width: 100%;">
                    @foreach (Post post in Model.User.Posts)
                    {
                        <div class="post-container__item" style="border: 1px solid black; margin: 15px; padding: 15px;">
                            <img style="width: 45px;float:left;margin-right: 10px;" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/111167/balapa.jpg">
                            <div class="post__content">
                                <span class="post__content-name">@post.User.FirstName</span>
                                <span class="post__content-date">@post.CreatedDate</span>
                                <div class="post__content-status">@post.Content</div>
                                @using (Html.BeginForm("StatusDelete", "Status", FormMethod.Post))
                                {
                                    <input type="hidden" value="@post.StatusId" name="statusId" />
                                    <input type="submit" value="Delete" />
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-sm">
            <div class="row">
                <div class="friend-container">
                    @foreach (ApplicationUser user in Model.FriendSuggestions)
                    {
                    <div class="friend-container__item">
                        <img style="width: 100px;" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/111167/balapa.jpg" />
                        <span>@user.FirstName @user.LastName</span>
                        @if (!Model.User.IsFriend(Model.User.Id, user.Id))
                        {
                            @using (Html.BeginForm("AddFriend", "Friend", FormMethod.Post))
                            {
                                @Html.Hidden("userId", Model.User.Id);
                                @Html.Hidden("friendId", user.Id);

                                <input type="submit" value="Add Friend" />
                            }
                        }
                        else
                        {
                            @using (Html.BeginForm("RemoveFriend", "Friend", FormMethod.Post))
                            {
                                @Html.Hidden("userId", Model.User.Id);
                                @Html.Hidden("friendId", user.Id);

                                <input type="submit" value="Remove Friend" />
                            }
                        }
                    </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/js/signalr.js"></script>
<script>
    "use strict";

    var connection = new signalR.HubConnectionBuilder()
        .withUrl("/global")
        .configureLogging(signalR.LogLevel.Information)
        .build();

    connection.start().then(
        () => console.log("connected")
    ).catch(
        err => console.error(err)
    );

    connection.on("BroadcastMessage", function (user, message) {
        console.log('received');
        var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        var encodedMsg = user + " says " + msg;
        var li = document.createElement("li");
        li.textContent = encodedMsg;
        alert(encodedMsg);
    });
</script>

@using SocialNetwork.Models.Users
@using Microsoft.AspNetCore.Identity
@using SocialNetwork.Models.Users.Status
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model SocialNetwork.Models.ViewModels.HomeViewModel

@{
    ViewData["Title"] = "Home Page";
}

@section Head{
    <link rel="stylesheet" href="~/css/posts/timeline.css" />
}

<div class="container">
    <div class="row">
        <div class="col-sm">
            <div class="row">
                <!-- Form to post a status update -->
                @using (Html.BeginForm("StatusPost", "Status", FormMethod.Post))
                {
                    @Html.LabelFor(m => m.Post.Content)
                    @Html.TextBoxFor(m => m.Post.Content)
                    <input type="submit" value="Post Update" />
                }
            </div>

            <div class="row">
                <div class="post-container">
                    @foreach (Post post in Model.TimelinePosts)
                    {
                        <div class="post-container__item">
                            <h3><span>posted by </span>@post.User.FirstName</h3>
                            @post.Content
                            <div class="post-container__item-overlay">
                                <div>
                                    <i class="fas fa-reply"></i>
                                </div>
                                <div>
                                    <i class='fas fa-heart @(!Model.User.PostLiked(Model.User.Id, post.StatusId) ? "post-unliked" : "post-liked")'></i>
                                    <input type="hidden" name="userId" value="@Model.User.Id" />
                                    <input type="hidden" name="postId" value="@post.StatusId" />
                                </div>
                            </div>
                            <br />
                            <span class="post-container__item-likes">@post.Likes.Count like@(post.Likes.Count > 1 ? "s" : "")</span>
                        </div>
                    }
                    <!--
                    {
                        <div class="post-container__item" style="border: 1px solid black; margin: 15px; padding: 15px;">
                            <img style="width: 45px;float:left;margin-right: 10px;" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/111167/balapa.jpg">
                            <div class="post__content">
                                <span class="post__content-name"></span>
                                <span class="post__content-date"></span>
                                <div class="post__content-status"></div>
                                @using (Html.BeginForm("StatusDelete", "Status", FormMethod.Post))
                                {
                                    <input type="hidden" value="" name="statusId" />
                                    <input type="submit" value="Delete" />
                                }
                            </div>
                        </div>
                    }-->
                </div>
            </div>
        </div>
        <div class="col-sm" style="display:none;">
            <div class="row">
                <div class="friend-container">
                    @foreach (ApplicationUser user in Model.FriendSuggestions)
                    {
                        <div class="friend-container__item">
                            <img style="width: 100px;" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/111167/balapa.jpg" />
                            <span>@user.FirstName @user.LastName</span>
                            @if (!Model.User.IsFriend(Model.User.Id, user.Id))
                            {
                                @using (Html.BeginForm("AddFriend", "Friend", FormMethod.Post))
                                {
                                    @Html.Hidden("UserId", Model.User.Id);
                                    @Html.Hidden("FriendId", user.Id);

                                    <input type="submit" value="Add Friend" />
                                }
                            }
                            else
                            {
                                @using (Html.BeginForm("RemoveFriend", "Friend", FormMethod.Post))
                                {
                                    @Html.Hidden("UserId", Model.User.Id);
                                    @Html.Hidden("FriendId", user.Id);

                                    <input type="submit" value="Remove Friend" />
                                }
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/js/signalr.js"></script>
    <script>
        "use strict";

        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/global")
            .configureLogging(signalR.LogLevel.Information)
            .build();

        connection.start().then(
            () => console.log("connected")
        ).catch(
            err => console.error(err)
        );

        connection.on("BroadcastMessage", function (user, message) {
            console.log('received');
            var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
            var encodedMsg = user + " says " + msg;
            var li = document.createElement("li");
            li.textContent = encodedMsg;
            alert(encodedMsg);
        });
    </script>

    <script>
        $(document).on('click', '.post-unliked', function () {
            var data = {
                userId : $(this).parent().find('input[name="userId"]').val(),
                postId : $(this).parent().find('input[name="postId"]').val()
            }
            $.post("/Ajax/LikePost", { UserId: data.userId, PostId: data.postId }, function (response) {
                if (response == "Success") {
                    $('.post-unliked').removeClass('post-unliked').addClass('post-liked');
                }
            });
        });

        $(document).on('click', '.post-liked', function () {
            var data = {
                userId: $(this).parent().find('input[name="userId"]').val(),
                postId: $(this).parent().find('input[name="postId"]').val()
            }
            $.post("/Ajax/UnlikePost", { UserId: data.userId, PostId: data.postId }, function (response) {
                if (response == "Success") {
                    $('.post-liked').removeClass('post-liked').addClass('post-unliked');
                }
            });
        });
    </script>
}